@page "/Proyectos"
@inject HttpClient Http

<h3>Gestión de Proyectos</h3>
<div style="padding:10px">
    <RadzenButton Click=@(args => OnClick("Light button")) Text="Nuevo" ButtonStyle="ButtonStyle.Light" />
    <RadzenButton Click=@(args => OnClick("Light button")) Text="Editar" ButtonStyle="ButtonStyle.Light" />
</div>

@*@bind-Value=@selected*@
<RadzenDataGrid Data="proyectosDto" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced"
                AllowPaging="true" PageSize="5" AllowSorting="true" AllowColumnResize="true" AllowColumnReorder="true"
                SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selected>
    <Columns>
        <RadzenDataGridColumn TItem="GetAllProyectosDto" Property="Id" Title="Id" />
        <RadzenDataGridColumn TItem="GetAllProyectosDto" Property="Clave" Title="Clave" />
        <RadzenDataGridColumn TItem="GetAllProyectosDto" Property="Titulo" Title="Título" />
        <RadzenDataGridColumn TItem="GetAllProyectosDto" Property="FechaAprobacion" Title="Aprobacion" FormatString="{0:dd/MM/yyyy}" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="GetAllProyectosDto" Property="Creador" Title="Creador" />
        <RadzenDataGridColumn TItem="GetAllProyectosDto" Property="FechaCreacion" Title="Creación" FormatString="{0:dd/MM/yyyy}" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="GetAllProyectosDto" Property="Modificador" Title="Modificador" />
        <RadzenDataGridColumn TItem="GetAllProyectosDto" Property="FechaModificacion" Title="Modificacion" FormatString="{0:dd/MM/yyyy}" TextAlign="TextAlign.Center" />
    </Columns>

</RadzenDataGrid>


@code {
    //EventConsole console;
    private IList<GetAllProyectosDto> proyectosDto;
    private string errorMessage;
    private IList<GetAllProyectosDto> selected = new List<GetAllProyectosDto>();

    protected override async Task OnInitializedAsync()
    {
        using var httpResponse = await Http.GetAsync("api/GetAllIsActiveProyectos/GetAllIsActive");

        if (!httpResponse.IsSuccessStatusCode)
        {
            // set error message for display, log to console and return
            errorMessage = httpResponse.ReasonPhrase;
            Console.WriteLine($"There was an error! {errorMessage}");
            return;
        }

        // convert http response data to UsersResponse object
        proyectosDto = await httpResponse.Content.ReadFromJsonAsync<List<GetAllProyectosDto>>();

        //selected = proyectosDto.Take(1).ToList();
    }


    void OnClick(string buttonName)
    {
        //console.Log($"{buttonName} clicked");
    }
}
