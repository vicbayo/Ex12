@page "/NuevoProyecto"
@using System.Text.Json
@using Ex12.Dtos.ModelView
@inject HttpClient Http
@inject Radzen.DialogService DialogService

<RadzenTemplateForm TItem="CrearProyectoDto" Data=@proyecto Submit=@OnSubmit InvalidSubmit=@OnInvalidSubmit>
    <RadzenTabs>
        <Tabs>
            <RadzenTabsItem Text="Proyecto">
                <div class="row">
                    <div class="col-lg-4 d-flex">
                        <h7 class="mb-0">Proyecto</h7>
                    </div>
                    <div class="col-lg-4 d-flex">
                        <h7 class="mb-0">Fecha Aprobación</h7>
                    </div>
                    <div class="col-lg-4 d-flex">

                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex">
                        <RadzenTextBox Change=@(args => OnChange(args, "TextBox")) Name="Clave" @bind-Value=@proyecto.Clave Class="w-100" style="display: block" />
                        <RadzenRequiredValidator Component="Clave" Text="" Popup=@popup Style="position: absolute" />
                    </div>
                    <div class="col-lg-4 d-flex">
                        <RadzenDatePicker @bind-Value=@proyecto.FechaAprobacion DateFormat="dd/MM/yyyy"
                                          Change=@(args => OnChangeFechaAprobacion(args, "DatePicker", "MM/dd/yyyy")) Class="w-100" />
                    </div>
                    <div class="col-lg-4 d-flex" style="margin-top: 7px; justify-content: center;">
                        <RadzenCheckBox @bind-Value=@proyecto.IsActive Name="CheckBox1" TValue="bool" Change=@(args => OnChangeIsActive(args, "CheckBox1 CheckBox")) />
                        <RadzenLabel Text="Activo" Component="Activo" Style="margin-left: 8px; vertical-align: middle;" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12 d-flex">
                        <h7 class="mt-2">Título</h7>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12 d-flex">
                        <RadzenTextArea Cols="30" Rows="3" Change=@(args => OnChangeTitulo(args, "TextArea")) 
                            Name="Titulo" @bind-Value=@proyecto.Titulo Class="w-100" />
                        <RadzenRequiredValidator Component="Titulo" Text="" Popup=@popup Style="position: absolute" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12 d-flex">
                        <h7 class="mt-2">Notas</h7>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12 d-flex">
                        <RadzenTextArea Cols="30" Rows="3" Change=@(args => OnChangeNotas(args, "TextArea")) 
                            Name="Nota" @bind-Value=@proyecto.Notes  Class="w-100" />
                    </div>
                </div>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Responsables">
                <div class="row">
                    <div class="col-lg-4 d-flex">
                        <h7 class="mb-0">Jefe Demarcación</h7>
                    </div>
                    <div class="col-lg-4 d-flex">
                        <h7 class="mb-0">Representante Demarcación</h7>
                    </div>
                    <div class="col-lg-4 d-flex">
                        <h7 class="mb-0">Ingeniero jefe área</h7>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex">
                        <RadzenTextBox Change=@(args => OnChange(args, "TextBox"))
                            Name="Clave" @bind-Value=@proyecto.CrearResponsablesDemarcacionDto.JefeDemarcacion Class="w-100" style="display: block" />
                    </div>
                    <div class="col-lg-4 d-flex">
                        <RadzenTextBox Change=@(args => OnChange(args, "TextBox"))
                            Name="Clave" @bind-Value=@proyecto.CrearResponsablesDemarcacionDto.RepresentanteDemarcacion Class="w-100" style="display: block" />
                    </div>
                    <div class="col-lg-4 d-flex">
                        <RadzenTextBox Change=@(args => OnChange(args, "TextBox"))
                            Name="Clave" @bind-Value=@proyecto.CrearResponsablesDemarcacionDto.IngenieroJefeArea Class="w-100" style="display: block" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex pt-2">
                        <h7 class="mb-0">Perito Demarcación</h7>
                    </div>
                    <div class="col-lg-4 d-flex pt-2">
                        <h7 class="mb-0">Ingeniero Circumbalación</h7>
                    </div>
                    <div class="col-lg-4 d-flex pt-2">
                        <h7 class="mb-0">Ingeniero Jefe</h7>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex">
                        <RadzenTextBox Change=@(args => OnChange(args, "TextBox"))
                            Name="Clave" @bind-Value=@proyecto.CrearResponsablesDemarcacionDto.PeritoDemarcacion Class="w-100" style="display: block" />
                        @*<RadzenRequiredValidator Component="Clave" Text="" Popup=@popup Style="position: absolute" />*@
                    </div>
                    <div class="col-lg-4 d-flex">
                        <RadzenTextBox Change=@(args => OnChange(args, "TextBox"))
                            Name="Clave" @bind-Value=@proyecto.CrearResponsablesDemarcacionDto.IngenieroCircumbalacion Class="w-100" style="display: block" />
                    </div>
                    <div class="col-lg-4 d-flex">
                        <RadzenTextBox Change=@(args => OnChange(args, "TextBox"))
                            Name="Clave" @bind-Value=@proyecto.CrearResponsablesDemarcacionDto.IngenieroJefe Class="w-100" style="display: block" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex pt-2">
                        <h7 class="mb-0">Pagador</h7>
                    </div>
                    <div class="col-lg-4 d-flex pt-2">
                        
                    </div>
                    <div class="col-lg-4 d-flex pt-2">
                        
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex">
                        <RadzenTextBox Change=@(args => OnChange(args, "TextBox"))
                            Name="Clave" @bind-Value=@proyecto.CrearResponsablesDemarcacionDto.Pagador Class="w-100" style="display: block" />
                    </div>
                    <div class="col-lg-4 d-flex">

                    </div>
                    <div class="col-lg-4 d-flex">

                    </div>
                </div>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Declaración">
                <div class="row">
                    <div class="col-lg-4 d-flex">
                        <h7 class="mb-0">Fecha declaración</h7>
                    </div>
                    <div class="col-lg-4 d-flex">
                        <h7 class="mb-0"></h7>
                    </div>
                    <div class="col-lg-4 d-flex">
                        <h7 class="mb-0"></h7>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex">
                        <RadzenDatePicker @bind-Value=@proyecto.CrearDeclaracionDto.FechaDeclaracion DateFormat="dd/MM/yyyy"
                            Change=@(args => OnChangeFechaDeclaracion(args, "DatePicker", "MM/dd/yyyy")) Class="w-100" />
                    </div>
                    <div class="col-lg-4 d-flex">

                    </div>
                    <div class="col-lg-4 d-flex">

                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex pt-2">
                        <h7 class="mb-0">Artículo</h7>
                    </div>
                    <div class="col-lg-4 d-flex pt-2">
                        <h7 class="mb-0">Fecha ley</h7>
                    </div>
                    <div class="col-lg-4 d-flex pt-2">
                        <h7 class="mb-0"></h7>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex">
                        <RadzenNumeric TValue="int?" Name="Articulo"
                            @bind-Value=@proyecto.CrearDeclaracionDto.Articulo Class="w-100" style="display: block" />
                    </div>
                    <div class="col-lg-4 d-flex">
                        <RadzenDatePicker @bind-Value=@proyecto.CrearDeclaracionDto.FechaLey DateFormat="dd/MM/yyyy"
                            Change=@(args => OnChangeFechaLey(args, "DatePicker", "MM/dd/yyyy")) Class="w-100" />
                    </div>
                    <div class="col-lg-4 d-flex">

                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex pt-2">
                        <h7 class="mb-0">Fecha BOE</h7>
                    </div>
                    <div class="col-lg-4 d-flex pt-2">
                        <h7 class="mb-0">Número BOE</h7>
                    </div>
                    <div class="col-lg-4 d-flex pt-2">
                        <h7 class="mb-0">Referencia BOE</h7>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4 d-flex">
                        <RadzenDatePicker @bind-Value=@proyecto.CrearDeclaracionDto.FechaBOE DateFormat="dd/MM/yyyy"
                            Change=@(args => OnChangeFechaBOE(args, "DatePicker", "MM/dd/yyyy")) Class="w-100" />
                    </div>
                    <div class="col-lg-4 d-flex">
                        <RadzenNumeric TValue="int?" Name="NumeroBOE"
                            @bind-Value=@proyecto.CrearDeclaracionDto.NumeroBOE Class="w-100" style="display: block" />
                    </div>
                    <div class="col-lg-4 d-flex">
                        <RadzenTextBox Change=@(args => OnChange(args, "TextBox"))
                            Name="ReferenciaBOE" @bind-Value=@proyecto.CrearDeclaracionDto.ReferenciaBOE Class="w-100" style="display: block" />
                    </div>
                </div>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>

    <div class="row">
        <div class="col-md-12  d-flex align-items-end">
            <RadzenButton Click="@((args) => DialogService.Close(false))" ButtonStyle="ButtonStyle.Primary" Text="Cancel" Style="width: 120px" Class="mr-1" />            
            <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary" Text="Aceptar"></RadzenButton>
        </div>
    </div>

</RadzenTemplateForm>

@*<EventConsole @ref=@console Class="mt-4" />*@

@code {
    [Parameter] public Guid Id { get; set; }

    //EventConsole console;

    DateTime FechaAprobacion = DateTime.Now;
    bool IsActive = true;
    private string errorMessage;


    bool popup;
    CrearProyectoDto proyecto = new CrearProyectoDto();    
    //proyecto.ProyectoDto.FechaAprobacion = DateTime.Now;

    protected override async Task OnInitializedAsync()
    {

        //DialogService.OnOpen += Open;
        //DialogService.OnClose += Close;

        //using var httpResponse = await Http.GetAsync("api/GetAllIsActiveProyectos/Get");

        //if (!httpResponse.IsSuccessStatusCode)
        //{
        //    // set error message for display, log to console and return
        //    errorMessage = httpResponse.ReasonPhrase;
        //    Console.WriteLine($"There was an error! {errorMessage}");
        //    return;
        //}

        //// convert http response data to UsersResponse object
        //proyectosDto = await httpResponse.Content.ReadFromJsonAsync<List<GetAllProyectosDto>>();

        ////selected = proyectosDto.Take(1).ToList();

    }

    void Open(string title, Type type, Dictionary<string, object> parameters, DialogOptions options)
    {
        //console.Log("Dialog opened");
    }

    void Close(dynamic result)
    {
        //console.Log($"Dialog closed");
    }


    void OnChange(string value, string name)
    {
        //console.Log($"{name} value changed to {value}");
    }
    void OnChangeFechaAprobacion(DateTime? value, string name, string format)
    {
        //console.Log($"{name} value changed to {value?.ToString(format)}");
    }
    void OnChangeTitulo(string name, string format)
    {
        //console.Log($"{name} value changed to {value?.ToString(format)}");
    }
    void OnChangeNotas(string name, string format)
    {
        //console.Log($"{name} value changed to {value?.ToString(format)}");
    }
    void OnChangeIsActive(bool estado, string name)
    {
        //console.Log($"{name} value changed to {value?.ToString(format)}");
    }
    void OnChangeFechaDeclaracion(DateTime? value, string name, string format)
    {
        //console.Log($"{name} value changed to {value?.ToString(format)}");
    }
    void OnChangeFechaLey(DateTime? value, string name, string format)
    {
        //console.Log($"{name} value changed to {value?.ToString(format)}");
    }
    void OnChangeFechaBOE(DateTime? value, string name, string format)
    {
        //console.Log($"{name} value changed to {value?.ToString(format)}");
    }

    async void OnSubmit(CrearProyectoDto proyecto)
    {
        //console.Log($"Submit: {JsonSerializer.Serialize(model, new JsonSerializerOptions() { WriteIndented = true })}");

        //Se acepta la creación del proyecto
        proyecto.Creador = "YO";
        proyecto.FechaCreacion = DateTime.Now;

        JsonContent content = JsonContent.Create(proyecto);

        using var httpResponse = await Http.PostAsync("api/CrearProyecto", content);

        if (!httpResponse.IsSuccessStatusCode)
        {
            // set error message for display, log to console and return
            errorMessage = httpResponse.ReasonPhrase;
            Console.WriteLine($"There was an error! {errorMessage}");
            return;
        }

        // convert http response data to UsersResponse object
        //proyectosDto = await httpResponse.Content.ReadFromJsonAsync<List<GetAllProyectosDto>>();

        //selected = proyectosDto.Take(1).ToList();

    }

    void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
    {
        //console.Log($"InvalidSubmit: {JsonSerializer.Serialize(args, new JsonSerializerOptions() { WriteIndented = true })}");
    }

}
